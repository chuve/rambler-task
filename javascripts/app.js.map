{"version":3,"sources":["app/application.js","app/initialize.js","app/lib/dictionary.js","app/lib/router.js","app/lib/view_helper.js","app/models/appModel.js","app/models/noteCollection.js","app/models/noteModel.js","app/views/formView.js","app/views/headerView.js","app/views/monthView.js","app/views/templates/form.hbs","app/views/templates/month.hbs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArvGA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnrJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArvGA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nApplication = {\n  initialize: function() {\n      var app = this,\n          NoteRouter = require('lib/router'),\n          NoteCollection = require('models/noteCollection'),\n          NoteAppModel = require('models/appModel'),\n          NoteModel = require('models/noteModel'),\n          HeaderView = require('views/headerView'),\n          MonthView = require('views/monthView'),\n          NoteFormView = require('views/formView');\n\n      app.router = new NoteRouter();\n      app.notes = new NoteCollection({});\n      app.appModel = new NoteAppModel();\n      app.headerView = new HeaderView({ model : app.appModel });\n      app.monthView = new MonthView({ model : app.appModel, collection: app.notes, attributes: {\n          'formConst': NoteFormView,\n          'modelConst': NoteModel\n      }});\n\n      app.appModel.on('change', function() {\n          var m = app.appModel.get('month'),\n              y = app.appModel.get('year');\n          this.render(app.appModel);\n          app.router.navigate('calendar/'+m+'-'+y);\n      }, app.monthView);\n\n      app.router.on('route:calendar', function(month, year) {\n          var now = new Date(),\n              day = now.getDate();\n\n          month = parseInt(month) || now.getMonth() + 1;\n          year = parseInt(year) || now.getYear() + 1900;\n\n          app.appModel.set({\n              'month' : month,\n              'year' : year\n          });\n      });\n\n      app.router.on('route:note', function(){\n          console.log('Show form');\n      });\n  }\n}\nmodule.exports = Application;\n","var application = require('application');\n\n$(function() {\n  application.initialize();\n  Backbone.history.start();\n});\n","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\n\nmodule.exports = {\n    1 : {\n        name: 'Январь',\n        length: 31\n    },\n    2 : {\n        name: 'Февраль',\n        length: 28\n    },\n    3 : {\n        name: 'Март',\n        length: 31\n    },\n    4 : {\n        name: 'Апрель',\n        length: 30\n    },\n    5 : {\n        name: 'Май',\n        length: 31\n    },\n    6 : {\n        name: 'Июнь',\n        length: 30\n    },\n    7 : {\n        name: 'Июль',\n        length: 31\n    },\n    8 : {\n        name: 'Август',\n        length: 31\n    },\n    9 : {\n        name: 'Сентябрь',\n        length: 30\n    },\n    10: {\n        name: 'Октябрь',\n        length: 31\n    },\n    11: {\n        name: 'Ноябрь',\n        length: 30\n    },\n    12: {\n        name: 'Декабрь',\n        length: 31\n    }\n};","var application = require('application');\n\nmodule.exports = Backbone.Router.extend({\n    routes: {\n        '' : 'calendar',\n        'calendar()/' : 'calendar',\n        'calendar/:month-:year' : 'calendar',\n        'calendar/note' : 'note'\n    }\n});\n","","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\nvar monthsDictionary = require('/lib/dictionary');\n\nmodule.exports = Backbone.Model.extend({\n    defaults: {\n        'month': 11,\n        'year': 2014\n    },\n\n    isLeapYear: function() {\n        var year = this.get('year');\n        if ( ( (year % 400) === 0 ) || ( ( year % 4 === 0 ) && ( year % 100 !== 0) ) ) {\n            return true;\n        }\n\n        return false;\n    },\n\n    getMonthName: function () {\n        return monthsDictionary[this.get('month')].name;\n    },\n\n    getMonthLength: function () {\n        var month = parseInt(this.get('month'));\n\n        if( month === 2 && this.isLeapYear() ) {\n            return monthsDictionary[month].length + 1;\n        }\n\n        return monthsDictionary[month].length;\n    },\n\n    getPrevMonthLength: function (){\n        var currentMonth = parseInt(this.get('month')),\n            currentYear = parseInt(this.get('year'));\n\n        if ( currentMonth > 1 ) {\n            return monthsDictionary[currentMonth - 1].length;\n        }\n\n        return monthsDictionary[1].length;\n    },\n\n    getFisrtWeekDay: function() {\n        var day = 1,\n            month = this.get('month'),\n            year = this.get('year');\n\n        var a = parseInt( (14 - month) / 12 ),\n            y = year - a,\n            m = month + 12 * a - 2,\n            weekday = ( 7000 + parseInt( day + y + parseInt( y / 4 ) - parseInt( y / 100 ) + parseInt( y / 400 ) + ( 31 * m ) / 12 ) ) % 7;\n\n        return weekday; // 0 - воскресенеье, 1 - понедельник\n    },\n\n    getNextMonth: function() {\n        var currentMonth = parseInt(this.get('month')),\n            currentYear = parseInt(this.get('year'));\n\n        if ( currentMonth < 12 ) {\n            return {\n                'month' :  currentMonth + 1,\n                'year' : currentYear\n            };\n        }\n\n        return {\n            'month' :  1,\n            'year' : currentYear + 1\n        };\n    },\n\n    getPrevMonth: function() {\n        var currentMonth = parseInt(this.get('month')),\n            currentYear = parseInt(this.get('year'));\n\n        if ( currentMonth > 1 ) {\n            return {\n                'month' :  currentMonth - 1,\n                'year' : currentYear\n            };\n        }\n\n        return {\n            'month' :  12,\n            'year' : currentYear - 1\n        };\n    },\n\n    setNextMonth: function() {\n        var nextMonth = this.getNextMonth();\n        this.set('month', nextMonth.month);\n        this.set('year', nextMonth.year);\n    },\n\n    setPrevMonth: function() {\n        var prevMonth = this.getPrevMonth();\n        this.set('month', prevMonth.month);\n        this.set('year', prevMonth.year);\n    }\n});","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\n\nvar NoteModel = require('./noteModel');\n\nmodule.exports = Backbone.Collection.extend({\n  model: NoteModel\n});\n","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\n\nmodule.exports = Backbone.Model.extend({\n    defaults: {\n        'date': '',\n        'title': '',\n        'text': ''\n    }\n});\n","/**\n * Created by echuvelev on 26/11/14.\n */\nvar template = require('./templates/form');\n\nmodule.exports = Backbone.View.extend({\n    el: $('[data-view=\"form-view\"]'),\n\n    template: template,\n\n    events: {\n        'click a[data-click=\"save\"]': 'saveNote',\n        'click a[data-click=\"cancel\"]': 'close'\n    },\n\n    imposeNote: function($el) {\n        $el.addClass('day--planned');\n    },\n\n    saveNote: function() {\n        var data = this.$el.find('form').serializeArray();\n\n        for(var i = 0; i < data.length; i++ ) {\n            this.model.set(data[i].name, data[i].value);\n        }\n        this.collection.add(this.model);\n        this.imposeNote(this.attributes.$targetDay);\n    },\n\n    close: function() {\n\n    },\n\n    initialize: function() {\n        this.render();\n        console.log(this.collection);\n    },\n\n    render: function(){\n        this.$el.html(this.template(this.model.toJSON()));\n    }\n});","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\n\nmodule.exports = Backbone.View.extend({\n    el: $('[data-view=\"header-view\"]'),\n\n    initialize: function(){\n        this.model.on('change:year', this.updateYear, this);\n        this.model.on('change:month', this.updateMonth, this);\n    },\n\n    events: {\n        'click [data-click=\"prev-month\"]' : 'prevMonth',\n        'click [data-click=\"next-month\"]' : 'nextMonth'\n    },\n\n    prevMonth: function() {\n        this.model.setPrevMonth();\n    },\n\n    nextMonth: function() {\n        this.model.setNextMonth();\n    },\n\n    updateYear: function() {\n        var $yearPlacement = this.$el.find('[data-bind=\"state-year\"]');\n        $yearPlacement.html(this.model.get('year'));\n    },\n\n    updateMonth: function() {\n        var $monthPlacement = this.$el.find('[data-bind=\"state-month\"]');\n        $monthPlacement.html(this.model.getMonthName());\n    }\n});\n","/**\n * Created by Evgeny Chuvelev on 26/11/14.\n */\nvar application = require('/application');\nvar template = require('./templates/month');\n\nmodule.exports = Backbone.View.extend({\n    el: $('[data-bind=\"date-of-the-month\"]'),\n\n    template: template,\n\n    events: {\n        'click td': 'displayNote'\n    },\n\n    imposeNote: function($el) {\n        $el.addClass('day--planned');\n    },\n\n    imposeNotes: function(){\n        var notes = application.notes.toJSON(),\n            $dates = this.$el.find('[data-date]'),\n            self = this;\n\n        _.each(notes, function(note) {\n            $dates.filter('[data-date=\"' + note.date + '\"]').addClass('day--planned');\n        });\n    },\n\n    displayNote: function(event) {\n\n        console.log(application.notes);\n\n        var $target = $(event.currentTarget),\n            targetDate = $target.data('date'),\n            targetNoteInCollection = application.notes.findWhere({ date : targetDate}),\n            textNote;\n\n        if ( targetNoteInCollection ) {\n            textNote = prompt('Введите текст', targetNoteInCollection.get('text'));\n            if (textNote && textNote.length) {\n                targetNoteInCollection.set('text', textNote);\n            }\n            return;\n        }\n\n        textNote = prompt('Введите текст');\n        if ( textNote && textNote.length ) {\n            application.notes.add({\n                'date' : targetDate,\n                'text' : textNote\n            });\n            this.imposeNote($target);\n        }\n\n        return;\n    },\n\n    initialize: function() {\n        this.render();\n    },\n\n    render: function() {\n        var month = this.model.get('month'),\n            year = this.model.get('year'),\n            length = this.model.getMonthLength(),\n            firstWeekDay = this.model.getFisrtWeekDay(),\n            prevMonthLength = this.model.getPrevMonthLength(),\n            self = this;\n\n        function getMonthModel(month, year, length) {\n            var days = {},\n                counter = 0;\n\n            // add prev month days\n            if (firstWeekDay !== 1) {\n                var prevMonthDays = (firstWeekDay !== 0) ? firstWeekDay - 1 : 6,\n                    pMonth = self.model.getPrevMonth();\n                p = prevMonthLength - prevMonthDays + 1;\n                while (prevMonthDays) {\n                    days[counter] = {\n                        num : p,\n                        date: p + '.' + pMonth.month + '.' + pMonth.year,\n                        current : false\n                    };\n                    p++;\n                    counter++;\n                    --prevMonthDays;\n                }\n            }\n\n            // add current month days\n            for (var c = 1; c <= length; c++) {\n                days[counter] = {\n                    num : c,\n                    date: c + '.' + month + '.' + year,\n                    current : true\n                };\n                counter++;\n            }\n\n            // add next month days\n            if (counter != 42) {\n                var nMonthDays = 42 - counter,\n                    nMonth = self.model.getNextMonth();\n                n = 1;\n                while (nMonthDays >= n) {\n                    days[counter] = {\n                        num : n,\n                        date: n + '.' + nMonth.month + '.' + nMonth.year,\n                        current : false\n                    };\n                    n++;\n                    counter++;\n                }\n            }\n\n            return days;\n        }\n\n        function setWeeks(days) {\n            var startWeekKeys = [0, 7, 14, 21, 28 , 35],\n                endWeekKeys = [6, 13, 20, 27, 34, 41],\n                weekends = [5, 6, 12, 13, 19, 20, 26, 27, 33, 34, 40, 41];\n\n            // Зарефакторить на 1 прогон по объекту (?)\n\n            _.each(startWeekKeys, function(key){\n                days[key].startWeek = true;\n            });\n\n            _.each(endWeekKeys, function(key){\n                days[key].endWeek = true;\n            });\n\n            _.each(weekends, function(key){\n                days[key].weekend = true;\n            });\n\n            return days;\n        }\n\n\n        var m = getMonthModel(month,year,length);\n        m = setWeeks(m);\n\n        this.$el.html(this.template(_.toArray(m)));\n        this.imposeNotes();\n    }\n});","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var buffer = \"\", stack1, foundHelper, self=this, functionType=\"function\", helperMissing=helpers.helperMissing, undef=void 0, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<form>\\n    <h2>Дата: \";\n  foundHelper = helpers.date;\n  stack1 = foundHelper || depth0.date;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"date\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</h2>\\n    <div>\\n        <label for=\\\"title\\\">День под девизом</label>\\n        <input type=\\\"text\\\" name=\\\"title\\\" value=\\\"\";\n  foundHelper = helpers.title;\n  stack1 = foundHelper || depth0.title;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"title\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"\\\">\\n    </div>\\n    <div>\\n        <label for=\\\"text\\\">Заметки</label>\\n        <textarea name=\\\"text\\\" id=\\\"\\\" cols=\\\"30\\\" rows=\\\"10\\\">\";\n  foundHelper = helpers.text;\n  stack1 = foundHelper || depth0.text;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"text\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</textarea>\\n    </div>\\n    <a data-click=\\\"save\\\">Сохранить</a>\\n    <a data-click=\\\"cancel\\\">Отмена</a>\\n</form>\";\n  return buffer;});","module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n  helpers = helpers || Handlebars.helpers;\n  var stack1, stack2, foundHelper, tmp1, self=this, functionType=\"function\", helperMissing=helpers.helperMissing, undef=void 0, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n    \";\n  foundHelper = helpers.startWeek;\n  stack1 = foundHelper || depth0.startWeek;\n  stack2 = helpers['if'];\n  tmp1 = self.program(2, program2, data);\n  tmp1.hash = {};\n  tmp1.fn = tmp1;\n  tmp1.inverse = self.noop;\n  stack1 = stack2.call(depth0, stack1, tmp1);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  foundHelper = helpers.current;\n  stack1 = foundHelper || depth0.current;\n  stack2 = helpers['if'];\n  tmp1 = self.program(4, program4, data);\n  tmp1.hash = {};\n  tmp1.fn = tmp1;\n  tmp1.inverse = self.program(7, program7, data);\n  stack1 = stack2.call(depth0, stack1, tmp1);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  foundHelper = helpers.endWeek;\n  stack1 = foundHelper || depth0.endWeek;\n  stack2 = helpers['if'];\n  tmp1 = self.program(9, program9, data);\n  tmp1.hash = {};\n  tmp1.fn = tmp1;\n  tmp1.inverse = self.noop;\n  stack1 = stack2.call(depth0, stack1, tmp1);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;}\nfunction program2(depth0,data) {\n  \n  \n  return \"<tr>\";}\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1, stack2;\n  buffer += \"\\n            <td data-date=\\\"\";\n  foundHelper = helpers.date;\n  stack1 = foundHelper || depth0.date;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"date\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"\\\" class=\\\"day \";\n  foundHelper = helpers.weekend;\n  stack1 = foundHelper || depth0.weekend;\n  stack2 = helpers['if'];\n  tmp1 = self.program(5, program5, data);\n  tmp1.hash = {};\n  tmp1.fn = tmp1;\n  tmp1.inverse = self.noop;\n  stack1 = stack2.call(depth0, stack1, tmp1);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"><span class=\\\"day__num\\\">\";\n  foundHelper = helpers.num;\n  stack1 = foundHelper || depth0.num;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"num\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</span></td>\\n    \";\n  return buffer;}\nfunction program5(depth0,data) {\n  \n  \n  return \"day--weekend\";}\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <td data-date=\\\"\";\n  foundHelper = helpers.date;\n  stack1 = foundHelper || depth0.date;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"date\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"\\\" class=\\\"day day--non-current\\\"><span class=\\\"day__num\\\">\";\n  foundHelper = helpers.num;\n  stack1 = foundHelper || depth0.num;\n  if(typeof stack1 === functionType) { stack1 = stack1.call(depth0, { hash: {} }); }\n  else if(stack1=== undef) { stack1 = helperMissing.call(depth0, \"num\", { hash: {} }); }\n  buffer += escapeExpression(stack1) + \"</span></td>\\n    \";\n  return buffer;}\n\nfunction program9(depth0,data) {\n  \n  \n  return \"</tr>\";}\n\n  stack1 = depth0;\n  stack2 = helpers.each;\n  tmp1 = self.program(1, program1, data);\n  tmp1.hash = {};\n  tmp1.fn = tmp1;\n  tmp1.inverse = self.noop;\n  stack1 = stack2.call(depth0, stack1, tmp1);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }});"]}